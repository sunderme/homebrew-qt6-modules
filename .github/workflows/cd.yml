name: CD
on:
  - push

env:
  QT_VERSION: 6.5.3
  QT_VERSION_MAJOR: 6.5
  POPPLER_VERSION: 23.09.0

jobs:
  
  base:
    name: Mac OS X
    runs-on: macos-11
    if: False

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Build dependency
      run: |
        brew install ninja

    - name: Download source
      run: |
        wget https://download.qt.io/official_releases/qt/${{ env.QT_VERSION_MAJOR }}/${{ env.QT_VERSION }}/submodules/qtbase-everywhere-src-${{ env.QT_VERSION }}.tar.xz
        tar xvf qtbase-everywhere-src-${{ env.QT_VERSION }}.tar.xz
    - name: Build
      run: |
        cd qtbase-everywhere-src-${{ env.QT_VERSION }}
        echo "include(CPack)">>CMakeLists.txt
        mkdir build
        cd build
        echo
        cmake .. -G Ninja
        cmake --build . --parallel
        
    - name: Package
      id: package
      run: |
        cd qtbase-everywhere-src-${{ env.QT_VERSION }}
        cd build
        cpack -G TXZ
        cp *.xz ../..
        pwd

    - name: Archive txz
      uses: actions/upload-artifact@v3
      with:
        name: qt6-base
        path: QtBase*.tar.xz 

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.QT_VERSION }}
        files: Qt*.tar.xz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
      
  svg:
    name: Mac OS X qtsvg
    # needs: base
    runs-on: macos-11
    if: False

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install Dependencies
      run: |
        wget https://github.com/sunderme/homebrew-qt6-modules/releases/download/${{ env.QT_VERSION }}/QtBase-${{ env.QT_VERSION }}-Darwin.tar.xz
        sudo tar xvf ./QtBase-${{ env.QT_VERSION }}-Darwin.tar.xz -C /usr/local
        rm QtBase-${{ env.QT_VERSION }}-Darwin.tar.xz

    - name: Build dependency
      run: |
        brew install ninja

    - name: Download source
      run: |
        wget https://download.qt.io/official_releases/qt/${{ env.QT_VERSION_MAJOR }}/${{ env.QT_VERSION }}/submodules/qtsvg-everywhere-src-${{ env.QT_VERSION }}.tar.xz
        tar xvf qtsvg-everywhere-src-${{ env.QT_VERSION }}.tar.xz
        rm qtsvg-everywhere-src-${{ env.QT_VERSION }}.tar.xz

    - name: Build
      run: |
        cd qtsvg-everywhere-src-${{ env.QT_VERSION }}
        echo "include(CPack)">>CMakeLists.txt
        mkdir build
        cd build
        /usr/local/QtBase-${{ env.QT_VERSION }}-Darwin/bin/qt-cmake .. -G Ninja
        cmake --build . --parallel
        
    - name: Package
      id: package
      run: |
        cd qtsvg-everywhere-src-${{ env.QT_VERSION }}
        cd build
        cpack -G TXZ
        cp *.xz ../..
        pwd

    - name: Archive bottle
      uses: actions/upload-artifact@v3
      with:
        name: qt6-svg
        path: Qt*.tar.xz

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.QT_VERSION }}
        files: Qt*.tar.xz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}

  qt5compat:
    name: Mac OS X qt5compat
    # needs: base
    runs-on: macos-11
    if: False

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install Dependencies
      run: |
        wget https://github.com/sunderme/homebrew-qt6-modules/releases/download/${{ env.QT_VERSION }}/QtBase-${{ env.QT_VERSION }}-Darwin.tar.xz
        sudo tar xvf ./QtBase-${{ env.QT_VERSION }}-Darwin.tar.xz -C /usr/local
        rm QtBase-${{ env.QT_VERSION }}-Darwin.tar.xz

    - name: Build dependency
      run: |
        brew install ninja

    - name: Download source
      run: |
        wget https://download.qt.io/official_releases/qt/${{ env.QT_VERSION_MAJOR }}/${{ env.QT_VERSION }}/submodules/qt5compat-everywhere-src-${{ env.QT_VERSION }}.tar.xz
        tar xvf qt5compat-everywhere-src-${{ env.QT_VERSION }}.tar.xz
        rm qt5compat-everywhere-src-${{ env.QT_VERSION }}.tar.xz

    - name: Build
      run: |
        cd qt5compat-everywhere-src-${{ env.QT_VERSION }}
        echo "include(CPack)">>CMakeLists.txt
        mkdir build
        cd build
        /usr/local/QtBase-${{ env.QT_VERSION }}-Darwin/bin/qt-cmake .. -G Ninja
        cmake --build . --parallel
        
    - name: Package
      id: package
      run: |
        cd qt5compat-everywhere-src-${{ env.QT_VERSION }}
        cd build
        cpack -G TXZ
        cp *.xz ../..
        pwd

    - name: Archive bottle
      uses: actions/upload-artifact@v3
      with:
        name: qt6-qt5compat
        path: Qt*.tar.xz 

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.QT_VERSION }}
        files: Qt*.tar.xz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
    
  tools:
    name: Mac OS X tools
    # needs: base
    runs-on: macos-11
    if: False

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install Dependencies
      run: |
        wget https://github.com/sunderme/homebrew-qt6-modules/releases/download/${{ env.QT_VERSION }}/QtBase-${{ env.QT_VERSION }}-Darwin.tar.xz
        sudo tar xvf ./QtBase-${{ env.QT_VERSION }}-Darwin.tar.xz -C /usr/local
        rm QtBase-${{ env.QT_VERSION }}-Darwin.tar.xz

    - name: Build dependency
      run: |
        brew install ninja

    - name: Download source
      run: |
        wget https://download.qt.io/official_releases/qt/${{ env.QT_VERSION_MAJOR }}/${{ env.QT_VERSION }}/submodules/qttools-everywhere-src-${{ env.QT_VERSION }}.tar.xz
        tar xvf qttools-everywhere-src-${{ env.QT_VERSION }}.tar.xz
        rm qttools-everywhere-src-${{ env.QT_VERSION }}.tar.xz

    - name: Build
      run: |
        cd qttools-everywhere-src-${{ env.QT_VERSION }}
        echo "include(CPack)">>CMakeLists.txt
        mkdir build
        cd build
        /usr/local/QtBase-${{ env.QT_VERSION }}-Darwin/bin/qt-cmake .. -G Ninja
        cmake --build . --parallel
        
    - name: Package
      id: package
      run: |
        cd qttools-everywhere-src-${{ env.QT_VERSION }}
        cd build
        cpack -G TXZ
        cp *.xz ../..
        pwd

    - name: Archive bottle
      uses: actions/upload-artifact@v3
      with:
        name: qt6-tools
        path: Qt*.tar.xz 

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.QT_VERSION }}
        files: Qt*.tar.xz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}

  charts:
    name: Mac OS X charts
    # needs: base
    runs-on: macos-11
    if: False

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install Dependencies
      run: |
        wget https://github.com/sunderme/homebrew-qt6-modules/releases/download/${{ env.QT_VERSION }}/QtBase-${{ env.QT_VERSION }}-Darwin.tar.xz
        sudo tar xvf ./QtBase-${{ env.QT_VERSION }}-Darwin.tar.xz -C /usr/local
        rm QtBase-${{ env.QT_VERSION }}-Darwin.tar.xz

    - name: Build dependency
      run: |
        brew install ninja

    - name: Download source
      run: |
        wget https://download.qt.io/official_releases/qt/${{ env.QT_VERSION_MAJOR }}/${{ env.QT_VERSION }}/submodules/qtcharts-everywhere-src-${{ env.QT_VERSION }}.tar.xz
        tar xvf qtcharts-everywhere-src-${{ env.QT_VERSION }}.tar.xz
        rm qtcharts-everywhere-src-${{ env.QT_VERSION }}.tar.xz

    - name: Build
      run: |
        cd qtcharts-everywhere-src-${{ env.QT_VERSION }}
        echo "include(CPack)">>CMakeLists.txt
        mkdir build
        cd build
        /usr/local/QtBase-${{ env.QT_VERSION }}-Darwin/bin/qt-cmake .. -G Ninja
        cmake --build . --parallel
        
    - name: Package
      id: package
      run: |
        cd qtcharts-everywhere-src-${{ env.QT_VERSION }}
        cd build
        cpack -G TXZ
        cp *.xz ../..
        pwd

    - name: Archive bottle
      uses: actions/upload-artifact@v3
      with:
        name: qt6-charts
        path: Qt*.tar.xz 

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.QT_VERSION }}
        files: Qt*.tar.xz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}

  declarative:
    name: Mac OS X declarative
    # needs: base
    runs-on: macos-11
    if: False

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install Dependencies
      run: |
        wget https://github.com/sunderme/homebrew-qt6-modules/releases/download/${{ env.QT_VERSION }}/QtBase-${{ env.QT_VERSION }}-Darwin.tar.xz
        sudo tar xvf ./QtBase-${{ env.QT_VERSION }}-Darwin.tar.xz -C /usr/local
        rm QtBase-${{ env.QT_VERSION }}-Darwin.tar.xz

    - name: Build dependency
      run: |
        brew install ninja

    - name: Download source
      run: |
        wget https://download.qt.io/official_releases/qt/${{ env.QT_VERSION_MAJOR }}/${{ env.QT_VERSION }}/submodules/qtdeclarative-everywhere-src-${{ env.QT_VERSION }}.tar.xz
        tar xvf qtdeclarative-everywhere-src-${{ env.QT_VERSION }}.tar.xz
        rm qtdeclarative-everywhere-src-${{ env.QT_VERSION }}.tar.xz

    - name: Build
      run: |
        cd qtdeclarative-everywhere-src-${{ env.QT_VERSION }}
        echo "include(CPack)">>CMakeLists.txt
        mkdir build
        cd build
        /usr/local/QtBase-${{ env.QT_VERSION }}-Darwin/bin/qt-cmake .. -G Ninja
        cmake --build . --parallel
        
    - name: Package
      id: package
      run: |
        cd qtdeclarative-everywhere-src-${{ env.QT_VERSION }}
        cd build
        cpack -G TXZ
        cp *.xz ../..
        pwd

    - name: Archive bottle
      uses: actions/upload-artifact@v3
      with:
        name: qt6-declarative
        path: Qt*.tar.xz 

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.QT_VERSION }}
        files: Qt*.tar.xz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
  
  quazip:
    name: Mac OS X quazip
    runs-on: macos-11
    if: ${{ always() }}
    needs: qt5compat

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install Dependencies
      run: |
        wget https://github.com/sunderme/homebrew-qt6-modules/releases/download/${{ env.QT_VERSION }}/QtBase-${{ env.QT_VERSION }}-Darwin.tar.xz
        sudo tar xvf ./QtBase-${{ env.QT_VERSION }}-Darwin.tar.xz -C /usr/local
        rm QtBase-${{ env.QT_VERSION }}-Darwin.tar.xz
        wget https://github.com/sunderme/homebrew-qt6-modules/releases/download/${{ env.QT_VERSION }}/Qt5Compat-${{ env.QT_VERSION }}-Darwin.tar.xz
        sudo tar xvf ./Qt5Compat-${{ env.QT_VERSION }}-Darwin.tar.xz -C /usr/local/QtBase-${{ env.QT_VERSION }}-Darwin --strip-components=1
        rm Qt5Compat-${{ env.QT_VERSION }}-Darwin.tar.xz

    - name: Download source
      run: |
        wget https://github.com/stachenov/quazip/archive/v1.4.tar.gz
        tar xvf v1.4.tar.gz
        rm v1.4.tar.gz

    - name: Build
      run: |
        cd quazip-1.4
        echo "include(CPack)">>CMakeLists.txt
        mkdir build
        cd build
        /usr/local/QtBase-${{ env.QT_VERSION }}-Darwin/bin/qt-cmake .. -DQUAZIP_BZIP2=off
        cmake --build . --parallel
        
    - name: Package
      id: package
      run: |
        cd quazip-1.4
        cd build
        cpack -G TXZ
        cp *.xz ../..
        pwd

    - name: Archive bottle
      uses: actions/upload-artifact@v3
      with:
        name: quazip-qt6
        path: QuaZip*.tar.xz 

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.QT_VERSION }}
        files: QuaZip*.tar.xz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}

  poppler:
    name: Mac OS X poppler
    # needs: base
    runs-on: macos-11
    if: True

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install Dependencies
      run: |
        wget https://github.com/sunderme/homebrew-qt6-modules/releases/download/${{ env.QT_VERSION }}/QtBase-${{ env.QT_VERSION }}-Darwin.tar.xz
        sudo tar xvf ./QtBase-${{ env.QT_VERSION }}-Darwin.tar.xz -C /usr/local
        rm QtBase-${{ env.QT_VERSION }}-Darwin.tar.xz
        wget https://github.com/sunderme/homebrew-qt6-modules/releases/download/${{ env.OSX_QT_VERSION }}/nss.tar.xz
        sudo tar xvf ./nss.tar.xz -C /usr/local --strip-components=1
        rm nss.tar.xz
        brew install cairo fontconfig freetype gettext jpeg libpng libtiff little-cms2 openjpeg

    - name: Download source
      run: |
        wget https://poppler.freedesktop.org/poppler-${{ env.POPPLER_VERSION }}.tar.xz
        tar xvf poppler-${{ env.POPPLER_VERSION }}.tar.xz
        rm poppler-${{ env.POPPLER_VERSION }}.tar.xz

    - name: Build
      run: |
        cd poppler-${{ env.POPPLER_VERSION }}
        echo "include(CPack)">>CMakeLists.txt
        mkdir build
        cd build
        /usr/local/QtBase-${{ env.QT_VERSION }}-Darwin/bin/qt-cmake .. -DBUILD_GTK_TESTS=OFF -DENABLE_BOOST=OFF -DENABLE_CMS=lcms2 -DENABLE_GLIB=OFF -DENABLE_QT5=OFF -DENABLE_QT6=ON -DENABLE_UNSTABLE_API_ABI_HEADERS=ON -DWITH_GObjectIntrospection=OFF
        cmake --build . --parallel
        
    - name: Package
      id: package
      run: |
        cd poppler-${{ env.POPPLER_VERSION }}
        cd build
        cpack -G TXZ
        cp *.xz ../../poppler-${{ env.POPPLER_VERSION }}-Darwin.tar.xz
        pwd

    - name: Archive bottle
      uses: actions/upload-artifact@v3
      with:
        name: poppler-qt6
        path: poppler*.tar.xz 

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.QT_VERSION }}
        files: poppler*.tar.xz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}

  nss:
    name: Mac OS X nss
    # needs: base
    runs-on: macos-11
    if: False

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Download source
      run: |
        wget https://ftp.mozilla.org/pub/security/nss/releases/NSS_3_94_RTM/src/nss-3.94-with-nspr-4.35.tar.gz
        tar xf nss-3.94-with-nspr-4.35.tar.gz
        rm nss-3.94-with-nspr-4.35.tar.gz

    - name: prepare build
      run: |
        brew install ninja
        python3 -m pip install gyp-next

    - name: Build
      run: |
        export PATH="/opt/homebrew/opt/python/libexec/bin:$PATH"
        cd nss-3.94/nss
        ./build.sh -o -j 2
        
    - name: Package
      id: package
      run: |
        cd nss-3.94/dist
        tar cvJhf nss.tar.xz Release
        pwd
        mv nss.tar.xz ../..

    - name: Archive bottle
      uses: actions/upload-artifact@v3
      with:
        name: nss
        path: nss.tar.xz 

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.QT_VERSION }}
        files: nss.tar.xz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}

        
 
